/*!
 * WOW - v1.0.2 - 2014-10-28
 * Copyright (c) 2014 Matthieu Aussaguel; Licensed MIT
 */
(function () {
  var a, b, c, d, e, f = function (a, b) {
    return function () {
      return a.apply(b, arguments);
    };
  },
    g = [].indexOf || function (a) {
      for (var b = 0, c = this.length; c > b; b++)
        if (b in this && this[b] === a)
          return b;
      return -1;
    };

  b = function () {
    function a() { }

    return a.prototype.extend = function (a, b) {
      var c, d;
      for (c in b)
        d = b[c],
          null == a[c] && (a[c] = d);
      return a;
    },
      a.prototype.isMobile = function (a) {
        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(a);
      },
      a.prototype.addEvent = function (a, b, c) {
        return null != a.addEventListener ?
          a.addEventListener(b, c, !1) :
          null != a.attachEvent ?
            a.attachEvent("on" + b, c) :
            a[b] = c;
      },
      a.prototype.removeEvent = function (a, b, c) {
        return null != a.removeEventListener ?
          a.removeEventListener(b, c, !1) :
          null != a.detachEvent ?
            a.detachEvent("on" + b, c) :
            delete a[b];
      },
      a.prototype.innerHeight = function () {
        return "innerHeight" in window ? window.innerHeight : document.documentElement.clientHeight;
      },
      a;
  }(),

    c = this.WeakMap || this.MozWeakMap || (c = function () {
      function a() {
        this.keys = [], this.values = [];
      }

      return a.prototype.get = function (a) {
        var b, c, d, e, f;
        for (f = this.keys,
          b = d = 0,
          e = f.length; e > d; b = ++d)
          if (c = f[b],
            c === a)
            return this.values[b];
      },
        a.prototype.set = function (a, b) {
          var c, d, e, f, g;
          for (g = this.keys,
            c = e = 0,
            f = g.length; f > e; c = ++e)
            if (d = g[c],
              d === a)
              return void (this.values[c] = b);
          return this.keys.push(a),
            this.values.push(b);
        },
        a;
    })(),

    a = this.MutationObserver || this.WebkitMutationObserver || this.MozMutationObserver || (a = function () {
      function a() {
        "undefined" != typeof console && null !== console && console.warn("MutationObserver is not supported by your browser."),
          "undefined" != typeof console && null !== console && console.warn("WOW.js cannot detect dom mutations, please call .sync() after loading new content.");
      }

      return a.notSupported = !0,
        a.prototype.observe = function () { },
        a;
    })(),

    d = this.getComputedStyle || function (a) {
      return this.getPropertyValue = function (b) {
        var c;
        return "float" ===
